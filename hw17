#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define NUM 5

const char* animals[]= {"Alligator", "Bear", "Cat", "Duck", "Elephant"};

/* Link node */
typedef struct Node_s{

    char name[10];

    struct Node_s *next;

}Node;

/* Head node */
typedef struct {

    int size;

    Node* headp;

}Node_list;

void construct_from_right(Node_list *head);

void print_list(Node_list *head, int num);

void construct_from_left(Node_list *head);

Node* copy_list(Node *old_list);

int main()
{
    /* Define head node for the 2 lists.new */
    Node_list  head1,
               head2;
    
    head1.headp = NULL, head2.headp = NULL;

    head1.size = 0,  head2.size = 0;

    /* The two construct function */
    
    construct_from_left(&head1);

    construct_from_right(&head2);
    
    /* Copy the first list (head1) */
    
    Node_list listcopy;

    listcopy.size = NUM;

    listcopy.headp = copy_list(&head1);

    /* Print the result of the lists. */
    
    print_list(&head1, 1);

    print_list(&head2, 2);

    print_list(&listcopy, 3);
    
    return 0;
}


/* TODO: complete the function */
void print_list(Node_list *head, int num){
    
    Node *p;

    p -> next = &head;

    printf("List%d", num);

    for(int i = 0; i < NUM; i ++)
    {
        printf("-> %s", p -> name);
    }
    printf("\n");
}

/* TODO: complete the function */
void construct_from_left(Node_list *head){     
    
    Node *new_node,
         *prev_node;

    for(int i = 0; i < NUM; i ++)
    {
        new_node = (Node *) malloc(sizeof (Node));          //step 3

        strcpy(new_node -> name, animals[i]);               //step 4

        if(head -> size == 0)
        {
            prev_node = NULL;                   //step 5

        }else{
        
            prev_node = new_node;               
        
        }
        new_node -> next = NULL;                //step 6
        
        prev_node -> next = new_node;           //step 7

        head -> size ++;
    }

}
/* TODO: complete the function */
void construct_from_right(Node_list *head){
   
    Node *new_node,
         *prev_node;

    for(int i = NUM - 1; i >= 0; i --)
    {
        new_node = (Node *) malloc(sizeof (Node));          //step 3

        strcpy(new_node -> name, animals[i]);               //step 4

        if(head -> size == 0)
        {
            prev_node = NULL;                   //step 5

        }else{
        
            prev_node = new_node;               
        
        }
        new_node -> next = NULL;                //step 6

        head -> size ++;
    }

    head -> headp = new_node;           //step 7
}

/* TODO: complete the function */
Node *copy_list(Node *old_list){
    
    Node *new_node;

    new_node -> next = NULL;

    if(old_list != NULL)
    {
        new_node = (Node *) malloc(sizeof (Node));

        strcpy(new_node -> name, old_list -> name);

        new_node -> next = copy_list(old_list -> next);

    }else{
    
        new_node = NULL;
    }

    return new_node;
}
